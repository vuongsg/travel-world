{"version":3,"sources":["slices/country-slices.ts","store.tsx","components/About.tsx","components/Country.tsx","components/NavBar.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["slice","createSlice","name","initialState","countries","selectedCountry","reducers","getCountries","state","action","payload","selectCountry","actions","store","configureStore","reducer","Country","countrySlices","About","id","Typography","useStyles","makeStyles","theme","root","width","maxWidth","backgroundColor","palette","background","paper","classes","countryState","useSelector","dispatch","useDispatch","useEffect","document","title","getCountriesList","a","fetch","response","json","data","Array","from","Grid","container","direction","style","padding","item","xs","className","length","List","component","map","m","index","ListItem","button","selected","onClick","event","handleSelectCountry","ListItemIcon","src","flag","alt","maxHeight","objectFit","ListItemText","primary","grow","flexGrow","menuButton","marginRight","spacing","display","breakpoints","up","inputRoot","color","inputInput","paddingLeft","transition","transitions","create","sectionDesktop","sectionMobile","tooltip","fontSize","letterSpacing","NavBar","React","useState","anchorEl","setAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMenuOpen","Boolean","isMobileMenuOpen","handleMobileMenuClose","handleMenuClose","renderMenu","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","onClose","MenuItem","mobileMenuId","renderMobileMenu","IconButton","to","AppBar","position","Toolbar","edge","variant","noWrap","Tooltip","placement","currentTarget","App","history","createBrowserHistory","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ba531e85.chunk.js","sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { CountryModel } from \"../models/country\";\r\n\r\nexport interface CountryState {\r\n    countries: CountryModel[],\r\n    selectedCountry: number\r\n}\r\n\r\nconst initialState: CountryState = {\r\n    countries: [],\r\n    selectedCountry: -1\r\n}\r\n\r\nconst slice = createSlice({\r\n    name: 'country',\r\n    initialState: initialState,\r\n    reducers: {\r\n        getCountries: (state: CountryState, action: PayloadAction<CountryModel[]>) => {\r\n            return {\r\n                ...state,\r\n                countries: action.payload\r\n            }\r\n        },\r\n        selectCountry: (state: CountryState, action: PayloadAction<number>) => {\r\n            return {\r\n                ...state,\r\n                selectedCountry: action.payload\r\n            }\r\n        }\r\n    }\r\n});\r\n\r\nexport const { getCountries, selectCountry } = slice.actions;\r\nexport default slice.reducer;","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport countrySlices from \"./slices/country-slices\";\r\n\r\nconst store = configureStore({\r\n    reducer: {\r\n        Country: countrySlices\r\n    }\r\n});\r\n\r\nexport type RootType = ReturnType<typeof store.getState>;\r\nexport default store;","import { Typography } from '@material-ui/core';\r\nimport { ReactElement } from 'react';\r\nimport './About.scss';\r\n\r\nexport const About = (): ReactElement => {\r\n    return (\r\n        <div id='main'>\r\n            <Typography>\r\n                <h2>A page to introduce the countries around the world</h2>\r\n            </Typography>\r\n        </div>\r\n    )\r\n}","import { useEffect } from 'react';\r\nimport { ReactElement } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { CountryModel } from '../models/country';\r\nimport { RootType } from '../store';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport './Country.scss';\r\nimport { Grid } from '@material-ui/core';\r\nimport { CountryState, getCountries, selectCountry } from '../slices/country-slices';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        maxWidth: 360,\r\n        backgroundColor: theme.palette.background.paper\r\n    },\r\n}));\r\n\r\nexport const Country = (): ReactElement => {\r\n    const classes = useStyles();\r\n    let countryState = useSelector<RootType>(state => state.Country) as CountryState;\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        document.title = 'Travel online around the world';\r\n        getCountriesList();\r\n    }, []);\r\n\r\n    /**\r\n     * Get countries list, called at first\r\n     */\r\n    const getCountriesList = async () => {\r\n        const response = await fetch('https://restcountries.eu/rest/v2/all');\r\n        const data = await response.json();\r\n        const countries: CountryModel[] = Array.from(data);\r\n        dispatch(getCountries(countries)); \r\n    }\r\n\r\n    const handleSelectCountry = (event: any, index: number) => {\r\n        dispatch(selectCountry(index));\r\n    }\r\n\r\n    /**\r\n     * Render countries list to UI\r\n     * @returns \r\n     */\r\n    const renderCountriesList = () => {\r\n        return (\r\n            <List component=\"nav\" aria-label=\"main mailbox folders\">\r\n                {countryState.countries.map((m: CountryModel, index: number) => \r\n                    <ListItem button selected={countryState.selectedCountry === index} onClick={(event) => handleSelectCountry(event, index)}>\r\n                        <ListItemIcon>\r\n                            <img src={m.flag} alt={m.name} style={{maxWidth: '30px', maxHeight: '30px', objectFit: 'cover'}} />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={m.name} />\r\n                    </ListItem>\r\n                )}\r\n            </List>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Grid container direction='row' style={{padding: '30px'}}>\r\n            <Grid item xs={3} className={classes.root}>\r\n                {countryState.countries.length === 0 ? <h2>Loading...</h2> : renderCountriesList()}\r\n            </Grid>\r\n\r\n            <Grid item xs={9}>\r\n                {countryState.countries.length === 0 ? ''\r\n                    : <div>\r\n                        <h1>In Progress....</h1>\r\n                        <h2>Stay tuned</h2>\r\n                    </div>}\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}","import React, { ReactElement } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport MoreIcon from '@material-ui/icons/MoreVert';\r\nimport { Link } from 'react-router-dom';\r\nimport './NavBar.scss'\r\nimport { Tooltip } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    display: 'none',\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'block',\r\n    },\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('md')]: {\r\n      width: '20ch',\r\n    },\r\n  },\r\n  sectionDesktop: {\r\n    display: 'none',\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'flex',\r\n    },\r\n    minWidth: '600px'\r\n  },\r\n  sectionMobile: {\r\n    display: 'flex',\r\n    [theme.breakpoints.up('md')]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n  tooltip: {\r\n    fontSize: '1em',\r\n    letterSpacing: '0.1em'\r\n  }\r\n}));\r\n\r\nexport const NavBar = ():ReactElement => {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\r\n\r\n  const isMenuOpen = Boolean(anchorEl);\r\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n\r\n  const handleMobileMenuClose = () => {\r\n    setMobileMoreAnchorEl(null);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n    handleMobileMenuClose();\r\n  };\r\n\r\n  const handleMobileMenuOpen = (event: React.MouseEvent<any>): void => {\r\n    setMobileMoreAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const menuId = 'primary-navbar';\r\n  const renderMenu = (\r\n    <Menu anchorEl={anchorEl} anchorOrigin={{ vertical: 'top', horizontal: 'right' }} id={menuId}\r\n          keepMounted transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n          open={isMenuOpen} onClose={handleMenuClose}>\r\n      <MenuItem onClick={handleMenuClose}>Home page</MenuItem>\r\n      <MenuItem onClick={handleMenuClose}>About</MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  const mobileMenuId = 'primary-navbar-mobile';\r\n  const renderMobileMenu = (\r\n    <Menu anchorEl={mobileMoreAnchorEl} anchorOrigin={{ vertical: 'top', horizontal: 'right' }} id={mobileMenuId}\r\n          keepMounted transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n          open={isMobileMenuOpen} onClose={handleMobileMenuClose}>\r\n      <MenuItem>\r\n        <IconButton aria-label='Home'>\r\n          <Link to='/'>\r\n            <HomeIcon />\r\n            <h5>Home</h5>\r\n          </Link>\r\n        </IconButton>\r\n      </MenuItem>\r\n\r\n      <MenuItem>\r\n        <IconButton aria-label='About'>\r\n          <Link to='/about'>\r\n            <InfoIcon />\r\n            <h5>About</h5>\r\n          </Link>\r\n        </IconButton>\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    <div id='main-nav-bar' className={classes.grow}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"open drawer\">\r\n          </IconButton>\r\n\r\n          <Typography className={classes.title} variant=\"h6\" noWrap>\r\n            Travel online around the world\r\n          </Typography>\r\n\r\n          <div className={classes.grow} />\r\n\r\n          <div className={classes.sectionDesktop}>\r\n            <IconButton aria-label='Home'>\r\n              <Link to='/'>\r\n                <Tooltip title='Home' placement='bottom' classes={{tooltip: classes.tooltip}}>\r\n                  <HomeIcon />\r\n                </Tooltip>\r\n              </Link>\r\n            </IconButton>\r\n            <IconButton aria-label='About'>\r\n              <Link to='/about'>\r\n                <Tooltip title='About' placement='bottom' classes={{tooltip: classes.tooltip}}>\r\n                  <InfoIcon />\r\n                </Tooltip>\r\n              </Link>\r\n            </IconButton>\r\n          </div>\r\n          <div className={classes.sectionMobile}>\r\n            <IconButton aria-label=\"Show more\" aria-controls={mobileMenuId} aria-haspopup=\"true\"\r\n                        onClick={handleMobileMenuOpen} color=\"inherit\">\r\n                <MoreIcon />\r\n            </IconButton>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n      {renderMobileMenu}\r\n      {renderMenu}\r\n    </div>\r\n  );\r\n}\r\n","import { Route, Router, Switch } from 'react-router-dom';\nimport { createBrowserHistory } from 'history';\nimport './App.scss';\nimport { About } from './components/About';\nimport { Country } from './components/Country';\nimport { NavBar } from './components/NavBar';\n\nfunction App() {\n  const history = createBrowserHistory();\n\n  return (\n    <Router history={history}>\n      <div className=\"App\">\n        <NavBar />\n\n        <Switch>\n          <Route path='/about' component={About} />\n          <Route path='/' component={Country} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}